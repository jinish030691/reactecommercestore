[{"E:\\intreview\\demo-app\\src\\index.js":"1","E:\\intreview\\demo-app\\src\\App.js":"2","E:\\intreview\\demo-app\\src\\reportWebVitals.js":"3","E:\\intreview\\demo-app\\src\\pages\\MainLayout.js":"4","E:\\intreview\\demo-app\\src\\pages\\Detail.js":"5","E:\\intreview\\demo-app\\src\\pages\\AddProduct.js":"6","E:\\intreview\\demo-app\\src\\pages\\TrashProduct.js":"7","E:\\intreview\\demo-app\\src\\component\\Breadcrumb.js":"8","E:\\intreview\\demo-app\\src\\component\\Searchbar.js":"9","E:\\intreview\\demo-app\\src\\component\\Filters.js":"10","E:\\intreview\\demo-app\\src\\component\\RadioBox.js":"11","E:\\intreview\\demo-app\\src\\component\\CheckBoxs.js":"12","E:\\intreview\\demo-app\\src\\component\\ProductItems.js":"13","E:\\intreview\\demo-app\\src\\component\\DeletedProductItem.js":"14","E:\\intreview\\demo-app\\src\\component\\ProductItem.js":"15","E:\\intreview\\demo-app\\src\\component\\Loader.js":"16"},{"size":500,"mtime":499162500000,"results":"17","hashOfConfig":"18"},{"size":881,"mtime":1612881932044,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"20","hashOfConfig":"18"},{"size":9000,"mtime":1612882642599,"results":"21","hashOfConfig":"18"},{"size":4357,"mtime":1612882306357,"results":"22","hashOfConfig":"18"},{"size":9606,"mtime":1612881877980,"results":"23","hashOfConfig":"18"},{"size":530,"mtime":1612882064627,"results":"24","hashOfConfig":"18"},{"size":696,"mtime":1612881925396,"results":"25","hashOfConfig":"18"},{"size":1395,"mtime":1612881921856,"results":"26","hashOfConfig":"18"},{"size":1790,"mtime":1612882336747,"results":"27","hashOfConfig":"18"},{"size":872,"mtime":1612881921823,"results":"28","hashOfConfig":"18"},{"size":2704,"mtime":1612881921532,"results":"29","hashOfConfig":"18"},{"size":698,"mtime":1612881921779,"results":"30","hashOfConfig":"18"},{"size":3706,"mtime":1612882287755,"results":"31","hashOfConfig":"18"},{"size":3306,"mtime":1612882366812,"results":"32","hashOfConfig":"18"},{"size":1434,"mtime":1612881921680,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"16ft9o2",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"36"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"E:\\intreview\\demo-app\\src\\index.js",[],["69","70"],"E:\\intreview\\demo-app\\src\\App.js",[],"E:\\intreview\\demo-app\\src\\reportWebVitals.js",[],"E:\\intreview\\demo-app\\src\\pages\\MainLayout.js",[],"E:\\intreview\\demo-app\\src\\pages\\Detail.js",[],"E:\\intreview\\demo-app\\src\\pages\\AddProduct.js",["71"],"import React from 'react';\r\nimport { useForm , Controller } from \"react-hook-form\";\r\nimport { TextField , FormGroup, FormControlLabel , Checkbox ,FormControl ,RadioGroup ,Radio , InputLabel , Select ,MenuItem} from '@material-ui/core';\r\n\r\n\r\n\r\nexport default function AddProduct(props) {\r\n    const { register, handleSubmit , control ,errors } = useForm();\r\n    const onSubmit = data => {\r\n        console.log(\"control :: \",control);\r\n        data.id = (JSON.parse(localStorage.getItem('productList')).length > 0 ) ?  JSON.parse(localStorage.getItem('productList')).length + 1 : 1;\r\n        \r\n        let locationArr = [];\r\n        if(data.indialocation) locationArr = [...locationArr,\"India\"];\r\n        if(data.uklocation) locationArr = [...locationArr,\"UK\"];\r\n        if(data.usalocation) locationArr = [...locationArr,\"USA\"];\r\n        data.location = locationArr;\r\n        \r\n        \r\n        \r\n        let newProductList = [...JSON.parse(localStorage.getItem('productList')), data];\r\n        localStorage.setItem('productList', JSON.stringify(newProductList));\r\n        \r\n        props.history.push('/');\r\n        //props.addItem(data);\r\n    } \r\n\r\n    const [stock, setValue] = React.useState(\"instock\");\r\n    const handleChange = (event) => {\r\n        setValue(event.target.value);\r\n    };\r\n    \r\n    return (\r\n        <div>\r\n            <h1>Add your Product</h1>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                <FormGroup>\r\n                    <TextField \r\n                        id=\"title\" \r\n                        label=\"Title\" \r\n                        variant=\"outlined\"\r\n                        inputRef = {register({\r\n                            required: true,\r\n                            maxLength : 50,\r\n                        })}\r\n                        error={!!errors.title}\r\n                        name=\"title\"\r\n                        rules={{ required: true }}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <p>{errors.title && \"Maximum character should be 50\"}</p>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <TextField\r\n                        id=\"desc\"\r\n                        label=\"desciption\"\r\n                        multiline\r\n                        rows={4}\r\n                        defaultValue=\"\"\r\n                        variant=\"outlined\"\r\n                        inputRef = {register({\r\n                            required: true,\r\n                            minLength : 10\r\n                        })}\r\n                        error={!!errors.desc}\r\n                        rules={{ required: true }}\r\n                        name=\"desc\"\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <p>{errors.desc && \"Minimum character should be 150\"}</p>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <FormControl component=\"fieldset\">\r\n                        <Controller\r\n                            rules={{ required: true }}\r\n                            control={control}\r\n                            defaultValue=\"instock\"\r\n                            name=\"stock\"\r\n                            as={\r\n                                <RadioGroup\r\n                                aria-label=\"stock\"\r\n                                value={stock}\r\n                                onChange={handleChange}\r\n                                >\r\n                                <FormControlLabel\r\n                                    value=\"instock\"\r\n                                    control={<Radio />}\r\n                                    label=\"In Stock\"\r\n                                />\r\n                                <FormControlLabel\r\n                                    value=\"outstock\"\r\n                                    control={<Radio />}\r\n                                    label=\"Out Of Stock\"\r\n                                />\r\n                                \r\n                                </RadioGroup>\r\n                            }\r\n                        />\r\n                    </FormControl>\r\n                </FormGroup>\r\n\r\n                <FormGroup>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Controller\r\n                            name=\"indialocation\"\r\n                            control={control}\r\n                            defaultValue={false}\r\n                            render={(props) => (\r\n                                <Checkbox\r\n                                {...props}\r\n                                onChange={(e) => props.onChange(e.target.checked)}\r\n                            />\r\n                            )}\r\n                        />\r\n                        }\r\n                        label=\"India\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Controller\r\n                            name=\"usalocation\"\r\n                            control={control}\r\n                            defaultValue={false}\r\n                            render={(props) => (\r\n                                <Checkbox\r\n                                {...props}\r\n                                onChange={(e) => props.onChange(e.target.checked)}\r\n                            />\r\n                            )}\r\n                        />\r\n                        }\r\n                        label=\"USA\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Controller\r\n                            name=\"uklocation\"\r\n                            control={control}\r\n                            defaultValue={false}\r\n                            render={(props) => (\r\n                                <Checkbox\r\n                                {...props}\r\n                                onChange={(e) => props.onChange(e.target.checked)}\r\n                            />\r\n                            )}\r\n                        />\r\n                        }\r\n                        label=\"UK\"\r\n                    />\r\n                </FormGroup>\r\n\r\n                <FormGroup style={{marginBottom : \"20px\"}}>\r\n                    <TextField\r\n                        id=\"price\"\r\n                        label=\"Price\"\r\n                        variant=\"outlined\"\r\n                        name=\"price\"\r\n                        autoComplete=\"off\"\r\n                        inputRef = {register({\r\n                            required: true\r\n                        })}\r\n                        error={!!errors.price}\r\n                        rules={{ required: true }}\r\n                        \r\n                    />\r\n                </FormGroup>\r\n                <FormGroup style={{marginBottom : \"20px\"}}>\r\n                    <TextField\r\n                        id=\"discountPrice\"\r\n                        label=\"Discount Price\"\r\n                        variant=\"outlined\"\r\n                        name=\"discountPrice\"\r\n                        autoComplete=\"off\"\r\n                        inputRef = {register({\r\n                            required: true\r\n                        })}\r\n                        error={!!errors.discountPrice}\r\n                        rules={{ required: true }}\r\n                    />\r\n                </FormGroup>\r\n                <FormGroup style={{marginBottom : \"20px\"}}>\r\n                    <TextField\r\n                        id=\"imgPath\"\r\n                        label=\"Image Url\"\r\n                        variant=\"outlined\"\r\n                        name=\"imgPath\"\r\n                        inputRef={register({\r\n                            required: true,\r\n                            pattern: /(ftp|http|https):\\/\\/(\\w+:{0,1}\\w*@)?(\\S+)(:[0-9]+)?(\\/|\\/([\\w#!:.?+=&%@!\\-\\/]))?/\r\n                        })}\r\n                        error={!!errors.imgPath}\r\n                        rules={{ required: true }}\r\n                        autoComplete=\"off\"\r\n                    />\r\n                    <p>{errors.imgPath && \"Please Enter Correct Image Path\"}</p>\r\n                </FormGroup>\r\n\r\n                <FormGroup style={{marginBottom : \"20px\"}}>\r\n                    <FormControl\r\n                        error={Boolean(errors.rating)}\r\n                    > \r\n                        <InputLabel id=\"demo-simple-select-label\">\r\n                            Rating\r\n                        </InputLabel>\r\n                        <Controller\r\n                            as={\r\n                                <Select>\r\n                                    <MenuItem value=\"1\">1</MenuItem>\r\n                                    <MenuItem value=\"2\">2</MenuItem>\r\n                                    <MenuItem value=\"3\">3</MenuItem>\r\n                                    <MenuItem value=\"4\">4</MenuItem>\r\n                                    <MenuItem value=\"5\">5</MenuItem>\r\n                                </Select>\r\n                            }\r\n                            name=\"rating\"\r\n                            rules={{ required: \"this is required\" }}\r\n                            control={control}\r\n                            defaultValue=\"1\"\r\n                        />\r\n                    </FormControl>       \r\n                </FormGroup>\r\n                \r\n                <FormGroup style={{marginBottom : \"20px\"}}>\r\n                    <TextField type=\"submit\" variant=\"outlined\" color=\"primary\" ></TextField>\r\n                </FormGroup>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","E:\\intreview\\demo-app\\src\\pages\\TrashProduct.js",[],"E:\\intreview\\demo-app\\src\\component\\Breadcrumb.js",[],"E:\\intreview\\demo-app\\src\\component\\Searchbar.js",[],"E:\\intreview\\demo-app\\src\\component\\Filters.js",["72","73"],"import React from 'react';\r\nimport CheckBoxs from './CheckBoxs';\r\nimport RadioBox from './RadioBox';\r\nimport Grid from '@material-ui/core/Grid';\r\nconst { useImperativeHandle } = React;\r\n\r\n\r\nconst continents = [{\r\n  \"id\" : \"1\",\r\n  \"name\" : \"India\"\r\n},{\r\n \"id\" : \"2\",\r\n \"name\" : \"USA\"\r\n},{\r\n \"id\" : \"3\",\r\n \"name\" : \"UK\"\r\n},]\r\n\r\nconst Filters = React.forwardRef((props,ref) => {\r\n  useImperativeHandle(ref, () => ({\r\n    getFilterdProductData(val) {\r\n      getFilterdProductData(val);\r\n    }\r\n  }));\r\n  function getFilterdProductData(inputVal){\r\n    const productData = JSON.parse(localStorage.getItem('productList'));\r\n    \r\n    let newProductData = productData.filter((elem)=>{\r\n      if(checkbox.length === 0){\r\n        if(elem.title.toLowerCase().includes(inputVal) && elem.stock === radio){\r\n          return elem;\r\n        }\r\n      }else{\r\n        if(elem.title.toLowerCase().includes(inputVal) && elem.stock === radio && elem.location.some((val) => checkbox.indexOf(val) !== -1)){\r\n          return elem;\r\n        }\r\n      }\r\n      return null;\r\n    })\r\n    props.setProductData(newProductData);\r\n  }\r\n\r\n  const [radio, setRadio] = React.useState('instock');\r\n  const [checkbox, setCheckbox] = React.useState(['India','USA','UK']);\r\n  const [input, setInput] = React.useState('');\r\n  \r\n  React.useEffect(() =>{\r\n    setInput(props.inputVal);\r\n    getFilterdProductData(props.inputVal);\r\n  },[checkbox,radio,props.inputVal]) \r\n  \r\n  \r\n  const setRadioVal = (val) => setRadio(val);\r\n  const setCheckboxVal = (arr) => setCheckbox(arr);\r\n  \r\n  return (\r\n    <Grid>\r\n      <CheckBoxs\r\n          list={continents}\r\n          handleFilters={setCheckboxVal}\r\n      />\r\n      <RadioBox\r\n        handleFilters={setRadioVal}\r\n      ></RadioBox>\r\n    </Grid>\r\n  );\r\n})\r\n\r\nexport default Filters\r\n\r\n","E:\\intreview\\demo-app\\src\\component\\RadioBox.js",[],"E:\\intreview\\demo-app\\src\\component\\CheckBoxs.js",[],"E:\\intreview\\demo-app\\src\\component\\ProductItems.js",[],"E:\\intreview\\demo-app\\src\\component\\DeletedProductItem.js",[],"E:\\intreview\\demo-app\\src\\component\\ProductItem.js",[],"E:\\intreview\\demo-app\\src\\component\\Loader.js",[],{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":190,"column":114,"nodeType":"80","messageId":"81","endLine":190,"endColumn":115,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":45,"column":10,"nodeType":"85","messageId":"86","endLine":45,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":50,"column":5,"nodeType":"89","endLine":50,"endColumn":36,"suggestions":"90"},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"no-useless-escape","Unnecessary escape character: \\/.","Literal","unnecessaryEscape",["93","94"],"no-unused-vars","'input' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'getFilterdProductData'. Either include it or remove the dependency array.","ArrayExpression",["95"],"no-global-assign","no-unsafe-negation",{"messageId":"96","fix":"97","desc":"98"},{"messageId":"99","fix":"100","desc":"101"},{"desc":"102","fix":"103"},"removeEscape",{"range":"104","text":"105"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"106","text":"107"},"Replace the `\\` with `\\\\` to include the actual backslash character.","Update the dependencies array to be: [checkbox, radio, props.inputVal, getFilterdProductData]",{"range":"108","text":"109"},[7870,7871],"",[7870,7870],"\\",[1395,1426],"[checkbox, radio, props.inputVal, getFilterdProductData]"]